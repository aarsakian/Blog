define("./workbox-bb98e8a8.js",["exports"],(function(t){"use strict";try{self["workbox:core:6.1.5"]&&_()}catch(t){}const e=(t,...e)=>{let s=t;return e.length>0&&(s+=` :: ${JSON.stringify(e)}`),s};class s extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:6.1.5"]&&_()}catch(t){}const n=t=>t&&"object"==typeof t?t:{handle:t};class i{constructor(t,e,s="GET"){this.handler=n(e),this.match=t,this.method=s}setCatchHandler(t){this.catchHandler=n(t)}}class a extends i{constructor(t,e,s){super((({url:e})=>{const s=t.exec(e.href);if(s&&(e.origin===location.origin||0===s.index))return s.slice(1)}),e,s)}}class r{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",(t=>{const{request:e}=t,s=this.handleRequest({request:e,event:t});s&&t.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(t=>{if(t.data&&"CACHE_URLS"===t.data.type){const{payload:e}=t.data,s=Promise.all(e.urlsToCache.map((e=>{"string"==typeof e&&(e=[e]);const s=new Request(...e);return this.handleRequest({request:s,event:t})})));t.waitUntil(s),t.ports&&t.ports[0]&&s.then((()=>t.ports[0].postMessage(!0)))}}))}handleRequest({request:t,event:e}){const s=new URL(t.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:i,route:a}=this.findMatchingRoute({event:e,request:t,sameOrigin:n,url:s});let r=a&&a.handler;const c=t.method;if(!r&&this.i.has(c)&&(r=this.i.get(c)),!r)return;let o;try{o=r.handle({url:s,request:t,event:e,params:i})}catch(t){o=Promise.reject(t)}const h=a&&a.catchHandler;return o instanceof Promise&&(this.o||h)&&(o=o.catch((async n=>{if(h)try{return await h.handle({url:s,request:t,event:e,params:i})}catch(t){n=t}if(this.o)return this.o.handle({url:s,request:t,event:e});throw n}))),o}findMatchingRoute({url:t,sameOrigin:e,request:s,event:n}){const i=this.t.get(s.method)||[];for(const a of i){let i;const r=a.match({url:t,sameOrigin:e,request:s,event:n});if(r)return i=r,(Array.isArray(r)&&0===r.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(i=void 0),{route:a,params:i}}return{}}setDefaultHandler(t,e="GET"){this.i.set(e,n(t))}setCatchHandler(t){this.o=n(t)}registerRoute(t){this.t.has(t.method)||this.t.set(t.method,[]),this.t.get(t.method).push(t)}unregisterRoute(t){if(!this.t.has(t.method))throw new s("unregister-route-but-not-found-with-method",{method:t.method});const e=this.t.get(t.method).indexOf(t);if(!(e>-1))throw new s("unregister-route-route-not-registered");this.t.get(t.method).splice(e,1)}}let c;const o=()=>(c||(c=new r,c.addFetchListener(),c.addCacheListener()),c);function h(t,e,n){let r;if("string"==typeof t){const s=new URL(t,location.href);r=new i((({url:t})=>t.href===s.href),e,n)}else if(t instanceof RegExp)r=new a(t,e,n);else if("function"==typeof t)r=new i(t,e,n);else{if(!(t instanceof i))throw new s("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=t}return o().registerRoute(r),r}const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},l=t=>[u.prefix,t,u.suffix].filter((t=>t&&t.length>0)).join("-"),f=t=>t||l(u.precache),w=t=>t||l(u.runtime);function d(t){t.then((()=>{}))}const y=new Set;class p{constructor(t,e,{onupgradeneeded:s,onversionchange:n}={}){this.h=null,this.u=t,this.l=e,this.p=s,this.m=n||(()=>this.close())}get db(){return this.h}async open(){if(!this.h)return this.h=await new Promise(((t,e)=>{let s=!1;setTimeout((()=>{s=!0,e(new Error("The open request was blocked and timed out"))}),this.OPEN_TIMEOUT);const n=indexedDB.open(this.u,this.l);n.onerror=()=>e(n.error),n.onupgradeneeded=t=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.p&&this.p(t)},n.onsuccess=()=>{const e=n.result;s?e.close():(e.onversionchange=this.m.bind(this),t(e))}})),this}async getKey(t,e){return(await this.getAllKeys(t,e,1))[0]}async getAll(t,e,s){return await this.getAllMatching(t,{query:e,count:s})}async getAllKeys(t,e,s){return(await this.getAllMatching(t,{query:e,count:s,includeKeys:!0})).map((t=>t.key))}async getAllMatching(t,{index:e,query:s=null,direction:n="next",count:i,includeKeys:a=!1}={}){return await this.transaction([t],"readonly",((r,c)=>{const o=r.objectStore(t),h=e?o.index(e):o,u=[],l=h.openCursor(s,n);l.onsuccess=()=>{const t=l.result;t?(u.push(a?t:t.value),i&&u.length>=i?c(u):t.continue()):c(u)}}))}async transaction(t,e,s){return await this.open(),await new Promise(((n,i)=>{const a=this.h.transaction(t,e);a.onabort=()=>i(a.error),a.oncomplete=()=>n(),s(a,(t=>n(t)))}))}async g(t,e,s,...n){return await this.transaction([e],s,((s,i)=>{const a=s.objectStore(e),r=a[t].apply(a,n);r.onsuccess=()=>i(r.result)}))}close(){this.h&&(this.h.close(),this.h=null)}}p.prototype.OPEN_TIMEOUT=2e3;const m={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[t,e]of Object.entries(m))for(const s of e)s in IDBObjectStore.prototype&&(p.prototype[s]=async function(e,...n){return await this.g(s,e,t,...n)});try{self["workbox:expiration:6.1.5"]&&_()}catch(t){}const g="cache-entries",q=t=>{const e=new URL(t,location.href);return e.hash="",e.href};class R{constructor(t){this.q=t,this.h=new p("workbox-expiration",1,{onupgradeneeded:t=>this.R(t)})}R(t){const e=t.target.result.createObjectStore(g,{keyPath:"id"});e.createIndex("cacheName","cacheName",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1}),(async t=>{await new Promise(((e,s)=>{const n=indexedDB.deleteDatabase(t);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{e()}}))})(this.q)}async setTimestamp(t,e){const s={url:t=q(t),timestamp:e,cacheName:this.q,id:this.v(t)};await this.h.put(g,s)}async getTimestamp(t){return(await this.h.get(g,this.v(t))).timestamp}async expireEntries(t,e){const s=await this.h.transaction(g,"readwrite",((s,n)=>{const i=s.objectStore(g).index("timestamp").openCursor(null,"prev"),a=[];let r=0;i.onsuccess=()=>{const s=i.result;if(s){const n=s.value;n.cacheName===this.q&&(t&&n.timestamp<t||e&&r>=e?a.push(s.value):r++),s.continue()}else n(a)}})),n=[];for(const t of s)await this.h.delete(g,t.id),n.push(t.url);return n}v(t){return this.q+"|"+q(t)}}class v{constructor(t,e={}){this.U=!1,this._=!1,this.L=e.maxEntries,this.D=e.maxAgeSeconds,this.N=e.matchOptions,this.q=t,this.k=new R(t)}async expireEntries(){if(this.U)return void(this._=!0);this.U=!0;const t=this.D?Date.now()-1e3*this.D:0,e=await this.k.expireEntries(t,this.L),s=await self.caches.open(this.q);for(const t of e)await s.delete(t,this.N);this.U=!1,this._&&(this._=!1,d(this.expireEntries()))}async updateTimestamp(t){await this.k.setTimestamp(t,Date.now())}async isURLExpired(t){if(this.D){return await this.k.getTimestamp(t)<Date.now()-1e3*this.D}return!1}async delete(){this._=!1,await this.k.expireEntries(1/0)}}try{self["workbox:background-sync:6.1.5"]&&_()}catch(t){}const b="requests",U="queueName";class x{constructor(t){this.C=t,this.h=new p("workbox-background-sync",3,{onupgradeneeded:this.T})}async pushEntry(t){delete t.id,t.queueName=this.C,await this.h.add(b,t)}async unshiftEntry(t){const[e]=await this.h.getAllMatching(b,{count:1});e?t.id=e.id-1:delete t.id,t.queueName=this.C,await this.h.add(b,t)}async popEntry(){return this.P({direction:"prev"})}async shiftEntry(){return this.P({direction:"next"})}async getAll(){return await this.h.getAllMatching(b,{index:U,query:IDBKeyRange.only(this.C)})}async deleteEntry(t){await this.h.delete(b,t)}async P({direction:t}){const[e]=await this.h.getAllMatching(b,{direction:t,index:U,query:IDBKeyRange.only(this.C),count:1});if(e)return await this.deleteEntry(e.id),e}T(t){const e=t.target.result;t.oldVersion>0&&t.oldVersion<3&&e.objectStoreNames.contains(b)&&e.deleteObjectStore(b);e.createObjectStore(b,{autoIncrement:!0,keyPath:"id"}).createIndex(U,U,{unique:!1})}}const E=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class L{constructor(t){"navigate"===t.mode&&(t.mode="same-origin"),this.O=t}static async fromRequest(t){const e={url:t.url,headers:{}};"GET"!==t.method&&(e.body=await t.clone().arrayBuffer());for(const[s,n]of t.headers.entries())e.headers[s]=n;for(const s of E)void 0!==t[s]&&(e[s]=t[s]);return new L(e)}toObject(){const t=Object.assign({},this.O);return t.headers=Object.assign({},this.O.headers),t.body&&(t.body=t.body.slice(0)),t}toRequest(){return new Request(this.O.url,this.O)}clone(){return new L(this.toObject())}}const D="workbox-background-sync",N=new Set,k=t=>{const e={request:new L(t.requestData).toRequest(),timestamp:t.timestamp};return t.metadata&&(e.metadata=t.metadata),e};class C{constructor(t,{onSync:e,maxRetentionTime:n}={}){if(this.K=!1,this.S=!1,N.has(t))throw new s("duplicate-queue-name",{name:t});N.add(t),this.u=t,this.A=e||this.replayRequests,this.I=n||10080,this.M=new x(this.u),this.W()}get name(){return this.u}async pushRequest(t){await this.j(t,"push")}async unshiftRequest(t){await this.j(t,"unshift")}async popRequest(){return this.B("pop")}async shiftRequest(){return this.B("shift")}async getAll(){const t=await this.M.getAll(),e=Date.now(),s=[];for(const n of t){const t=60*this.I*1e3;e-n.timestamp>t?await this.M.deleteEntry(n.id):s.push(k(n))}return s}async j({request:t,metadata:e,timestamp:s=Date.now()},n){const i={requestData:(await L.fromRequest(t.clone())).toObject(),timestamp:s};e&&(i.metadata=e),await this.M[`${n}Entry`](i),this.K?this.S=!0:await this.registerSync()}async B(t){const e=Date.now(),s=await this.M[`${t}Entry`]();if(s){const n=60*this.I*1e3;return e-s.timestamp>n?this.B(t):k(s)}}async replayRequests(){let t;for(;t=await this.shiftRequest();)try{await fetch(t.request.clone())}catch(e){throw await this.unshiftRequest(t),new s("queue-replay-failed",{name:this.u})}}async registerSync(){if("sync"in self.registration)try{await self.registration.sync.register(`${D}:${this.u}`)}catch(t){}}W(){"sync"in self.registration?self.addEventListener("sync",(t=>{if(t.tag===`${D}:${this.u}`){const e=async()=>{let e;this.K=!0;try{await this.A({queue:this})}catch(t){throw e=t,e}finally{!this.S||e&&!t.lastChance||await this.registerSync(),this.K=!1,this.S=!1}};t.waitUntil(e())}})):this.A({queue:this})}static get F(){return N}}try{self["workbox:cacheable-response:6.1.5"]&&_()}catch(t){}class T{constructor(t={}){this.$=t.statuses,this.H=t.headers}isResponseCacheable(t){let e=!0;return this.$&&(e=this.$.includes(t.status)),this.H&&e&&(e=Object.keys(this.H).some((e=>t.headers.get(e)===this.H[e]))),e}}function P(t){return new Promise((e=>setTimeout(e,t)))}try{self["workbox:broadcast-update:6.1.5"]&&_()}catch(t){}const O=["content-length","etag","last-modified"],K=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);function S(t){return{cacheName:t.cacheName,updatedURL:t.request.url}}class A{constructor({headersToCheck:t,generatePayload:e}={}){this.G=t||O,this.V=e||S}async notifyIfUpdated(t){var e,s,n;if(t.oldResponse&&(e=t.oldResponse,s=t.newResponse,(n=this.G).some((t=>e.headers.has(t)&&s.headers.has(t)))&&!n.every((t=>{const n=e.headers.has(t)===s.headers.has(t),i=e.headers.get(t)===s.headers.get(t);return n&&i})))){const e={type:"CACHE_UPDATED",meta:"workbox-broadcast-update",payload:this.V(t)};if("navigate"===t.request.mode){let e;t.event instanceof FetchEvent&&(e=t.event.resultingClientId);await async function(t){if(!t)return;let e=await self.clients.matchAll({type:"window"});const s=new Set(e.map((t=>t.id)));let n;const i=performance.now();for(;performance.now()-i<2e3&&(e=await self.clients.matchAll({type:"window"}),n=e.find((e=>t?e.id===t:!s.has(e.id))),!n);)await P(100);return n}(e)&&!K||await P(3500)}const s=await self.clients.matchAll({type:"window"});for(const t of s)t.postMessage(e)}}}try{self["workbox:strategies:6.1.5"]&&_()}catch(t){}const I={cacheWillUpdate:async({response:t})=>200===t.status||0===t.status?t:null};function M(){return(M=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(t[n]=s[n])}return t}).apply(this,arguments)}function W(t,e){const s=new URL(t);for(const t of e)s.searchParams.delete(t);return s.href}class j{constructor(){this.promise=new Promise(((t,e)=>{this.resolve=t,this.reject=e}))}}function B(t){return"string"==typeof t?new Request(t):t}class F{constructor(t,e){this.J={},Object.assign(this,e),this.event=e.event,this.X=t,this.Y=new j,this.Z=[],this.tt=[...t.plugins],this.et=new Map;for(const t of this.tt)this.et.set(t,{});this.event.waitUntil(this.Y.promise)}async fetch(t){const{event:e}=this;let n=B(t);if("navigate"===n.mode&&e instanceof FetchEvent&&e.preloadResponse){const t=await e.preloadResponse;if(t)return t}const i=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const t of this.iterateCallbacks("requestWillFetch"))n=await t({request:n.clone(),event:e})}catch(t){throw new s("plugin-error-request-will-fetch",{thrownError:t})}const a=n.clone();try{let t;t=await fetch(n,"navigate"===n.mode?void 0:this.X.fetchOptions);for(const s of this.iterateCallbacks("fetchDidSucceed"))t=await s({event:e,request:a,response:t});return t}catch(t){throw i&&await this.runCallbacks("fetchDidFail",{error:t,event:e,originalRequest:i.clone(),request:a.clone()}),t}}async fetchAndCachePut(t){const e=await this.fetch(t),s=e.clone();return this.waitUntil(this.cachePut(t,s)),e}async cacheMatch(t){const e=B(t);let s;const{cacheName:n,matchOptions:i}=this.X,a=await this.getCacheKey(e,"read"),r=M({},i,{cacheName:n});s=await caches.match(a,r);for(const t of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await t({cacheName:n,matchOptions:i,cachedResponse:s,request:a,event:this.event})||void 0;return s}async cachePut(t,e){const n=B(t);await P(0);const i=await this.getCacheKey(n,"write");if(!e)throw new s("cache-put-with-no-response",{url:(a=i.url,new URL(String(a),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var a;const r=await this.st(e);if(!r)return!1;const{cacheName:c,matchOptions:o}=this.X,h=await self.caches.open(c),u=this.hasCallback("cacheDidUpdate"),l=u?await async function(t,e,s,n){const i=W(e.url,s);if(e.url===i)return t.match(e,n);const a=M({},n,{ignoreSearch:!0}),r=await t.keys(e,a);for(const e of r)if(i===W(e.url,s))return t.match(e,n)}(h,i.clone(),["__WB_REVISION__"],o):null;try{await h.put(i,u?r.clone():r)}catch(t){throw"QuotaExceededError"===t.name&&await async function(){for(const t of y)await t()}(),t}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:c,oldResponse:l,newResponse:r.clone(),request:i,event:this.event});return!0}async getCacheKey(t,e){if(!this.J[e]){let s=t;for(const t of this.iterateCallbacks("cacheKeyWillBeUsed"))s=B(await t({mode:e,request:s,event:this.event,params:this.params}));this.J[e]=s}return this.J[e]}hasCallback(t){for(const e of this.X.plugins)if(t in e)return!0;return!1}async runCallbacks(t,e){for(const s of this.iterateCallbacks(t))await s(e)}*iterateCallbacks(t){for(const e of this.X.plugins)if("function"==typeof e[t]){const s=this.et.get(e),n=n=>{const i=M({},n,{state:s});return e[t](i)};yield n}}waitUntil(t){return this.Z.push(t),t}async doneWaiting(){let t;for(;t=this.Z.shift();)await t}destroy(){this.Y.resolve()}async st(t){let e=t,s=!1;for(const t of this.iterateCallbacks("cacheWillUpdate"))if(e=await t({request:this.request,response:e,event:this.event})||void 0,s=!0,!e)break;return s||e&&200!==e.status&&(e=void 0),e}}class ${constructor(t={}){this.cacheName=w(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}handle(t){const[e]=this.handleAll(t);return e}handleAll(t){t instanceof FetchEvent&&(t={event:t,request:t.request});const e=t.event,s="string"==typeof t.request?new Request(t.request):t.request,n="params"in t?t.params:void 0,i=new F(this,{event:e,request:s,params:n}),a=this.nt(i,s,e);return[a,this.it(a,i,s,e)]}async nt(t,e,n){let i;await t.runCallbacks("handlerWillStart",{event:n,request:e});try{if(i=await this.at(e,t),!i||"error"===i.type)throw new s("no-response",{url:e.url})}catch(s){for(const a of t.iterateCallbacks("handlerDidError"))if(i=await a({error:s,event:n,request:e}),i)break;if(!i)throw s}for(const s of t.iterateCallbacks("handlerWillRespond"))i=await s({event:n,request:e,response:i});return i}async it(t,e,s,n){let i,a;try{i=await t}catch(a){}try{await e.runCallbacks("handlerDidRespond",{event:n,request:s,response:i}),await e.doneWaiting()}catch(t){a=t}if(await e.runCallbacks("handlerDidComplete",{event:n,request:s,response:i,error:a}),e.destroy(),a)throw a}}function H(t,e){const s=e();return t.waitUntil(s),s}try{self["workbox:precaching:6.1.5"]&&_()}catch(t){}function G(t){if(!t)throw new s("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:e,url:n}=t;if(!n)throw new s("add-to-cache-list-unexpected-type",{entry:t});if(!e){const t=new URL(n,location.href);return{cacheKey:t.href,url:t.href}}const i=new URL(n,location.href),a=new URL(n,location.href);return i.searchParams.set("__WB_REVISION__",e),{cacheKey:i.href,url:a.href}}class V{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:t,state:e})=>{e&&(e.originalRequest=t)},this.cachedResponseWillBeUsed=async({event:t,state:e,cachedResponse:s})=>{if("install"===t.type){const t=e.originalRequest.url;s?this.notUpdatedURLs.push(t):this.updatedURLs.push(t)}return s}}}class J{constructor({precacheController:t}){this.cacheKeyWillBeUsed=async({request:t,params:e})=>{const s=e&&e.cacheKey||this.rt.getCacheKeyForURL(t.url);return s?new Request(s):t},this.rt=t}}let Q,z;async function X(t,e){let n=null;if(t.url){n=new URL(t.url).origin}if(n!==self.location.origin)throw new s("cross-origin-copy-response",{origin:n});const i=t.clone(),a={headers:new Headers(i.headers),status:i.status,statusText:i.statusText},r=e?e(a):a,c=function(){if(void 0===Q){const t=new Response("");if("body"in t)try{new Response(t.body),Q=!0}catch(t){Q=!1}Q=!1}return Q}()?i.body:await i.blob();return new Response(c,r)}class Y extends ${constructor(t={}){t.cacheName=f(t.cacheName),super(t),this.ct=!1!==t.fallbackToNetwork,this.plugins.push(Y.copyRedirectedCacheableResponsesPlugin)}async at(t,e){const s=await e.cacheMatch(t);return s||(e.event&&"install"===e.event.type?await this.ot(t,e):await this.ht(t,e))}async ht(t,e){let n;if(!this.ct)throw new s("missing-precache-entry",{cacheName:this.cacheName,url:t.url});return n=await e.fetch(t),n}async ot(t,e){this.ut();const n=await e.fetch(t);if(!await e.cachePut(t,n.clone()))throw new s("bad-precaching-response",{url:t.url,status:n.status});return n}ut(){let t=null,e=0;for(const[s,n]of this.plugins.entries())n!==Y.copyRedirectedCacheableResponsesPlugin&&(n===Y.defaultPrecacheCacheabilityPlugin&&(t=s),n.cacheWillUpdate&&e++);0===e?this.plugins.push(Y.defaultPrecacheCacheabilityPlugin):e>1&&null!==t&&this.plugins.splice(t,1)}}Y.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:t})=>!t||t.status>=400?null:t},Y.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await X(t):t};class Z{constructor({cacheName:t,plugins:e=[],fallbackToNetwork:s=!0}={}){this.lt=new Map,this.ft=new Map,this.wt=new Map,this.X=new Y({cacheName:f(t),plugins:[...e,new J({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.X}precache(t){this.addToCacheList(t),this.dt||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.dt=!0)}addToCacheList(t){const e=[];for(const n of t){"string"==typeof n?e.push(n):n&&void 0===n.revision&&e.push(n.url);const{cacheKey:t,url:i}=G(n),a="string"!=typeof n&&n.revision?"reload":"default";if(this.lt.has(i)&&this.lt.get(i)!==t)throw new s("add-to-cache-list-conflicting-entries",{firstEntry:this.lt.get(i),secondEntry:t});if("string"!=typeof n&&n.integrity){if(this.wt.has(t)&&this.wt.get(t)!==n.integrity)throw new s("add-to-cache-list-conflicting-integrities",{url:i});this.wt.set(t,n.integrity)}if(this.lt.set(i,t),this.ft.set(i,a),e.length>0){const t=`Workbox is precaching URLs without revision info: ${e.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(t)}}}install(t){return H(t,(async()=>{const e=new V;this.strategy.plugins.push(e);for(const[e,s]of this.lt){const n=this.wt.get(s),i=this.ft.get(e),a=new Request(e,{integrity:n,cache:i,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:a,event:t}))}const{updatedURLs:s,notUpdatedURLs:n}=e;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(t){return H(t,(async()=>{const t=await self.caches.open(this.strategy.cacheName),e=await t.keys(),s=new Set(this.lt.values()),n=[];for(const i of e)s.has(i.url)||(await t.delete(i),n.push(i.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this.lt}getCachedURLs(){return[...this.lt.keys()]}getCacheKeyForURL(t){const e=new URL(t,location.href);return this.lt.get(e.href)}async matchPrecache(t){const e=t instanceof Request?t.url:t,s=this.getCacheKeyForURL(e);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(t){const e=this.getCacheKeyForURL(t);if(!e)throw new s("non-precached-url",{url:t});return s=>(s.request=new Request(t),s.params=M({cacheKey:e},s.params),this.strategy.handle(s))}}const tt=()=>(z||(z=new Z),z);class et extends i{constructor(t,e){super((({request:s})=>{const n=t.getURLsToCacheKeys();for(const t of function*(t,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:i}={}){const a=new URL(t,location.href);a.hash="",yield a.href;const r=function(t,e=[]){for(const s of[...t.searchParams.keys()])e.some((t=>t.test(s)))&&t.searchParams.delete(s);return t}(a,e);if(yield r.href,s&&r.pathname.endsWith("/")){const t=new URL(r.href);t.pathname+=s,yield t.href}if(n){const t=new URL(r.href);t.pathname+=".html",yield t.href}if(i){const t=i({url:a});for(const e of t)yield e.href}}(s.url,e)){const e=n.get(t);if(e)return{cacheKey:e}}}),t.strategy)}}t.BackgroundSyncPlugin=class{constructor(t,e){this.fetchDidFail=async({request:t})=>{await this.yt.pushRequest({request:t})},this.yt=new C(t,e)}},t.BroadcastUpdatePlugin=class{constructor(t){this.cacheDidUpdate=async t=>{d(this.gt.notifyIfUpdated(t))},this.gt=new A(t)}},t.CacheableResponsePlugin=class{constructor(t){this.cacheWillUpdate=async({response:t})=>this.qt.isResponseCacheable(t)?t:null,this.qt=new T(t)}},t.ExpirationPlugin=class{constructor(t={}){var e;this.cachedResponseWillBeUsed=async({event:t,request:e,cacheName:s,cachedResponse:n})=>{if(!n)return null;const i=this.Rt(n),a=this.vt(s);d(a.expireEntries());const r=a.updateTimestamp(e.url);if(t)try{t.waitUntil(r)}catch(t){}return i?n:null},this.cacheDidUpdate=async({cacheName:t,request:e})=>{const s=this.vt(t);await s.updateTimestamp(e.url),await s.expireEntries()},this.bt=t,this.D=t.maxAgeSeconds,this.Ut=new Map,t.purgeOnQuotaError&&(e=()=>this.deleteCacheAndMetadata(),y.add(e))}vt(t){if(t===w())throw new s("expire-custom-caches-only");let e=this.Ut.get(t);return e||(e=new v(t,this.bt),this.Ut.set(t,e)),e}Rt(t){if(!this.D)return!0;const e=this._t(t);if(null===e)return!0;return e>=Date.now()-1e3*this.D}_t(t){if(!t.headers.has("date"))return null;const e=t.headers.get("date"),s=new Date(e).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[t,e]of this.Ut)await self.caches.delete(t),await e.delete();this.Ut=new Map}},t.NetworkFirst=class extends ${constructor(t={}){super(t),this.plugins.some((t=>"cacheWillUpdate"in t))||this.plugins.unshift(I),this.xt=t.networkTimeoutSeconds||0}async at(t,e){const n=[],i=[];let a;if(this.xt){const{id:s,promise:r}=this.Et({request:t,logs:n,handler:e});a=s,i.push(r)}const r=this.Lt({timeoutId:a,request:t,logs:n,handler:e});i.push(r);const c=await e.waitUntil((async()=>await e.waitUntil(Promise.race(i))||await r)());if(!c)throw new s("no-response",{url:t.url});return c}Et({request:t,logs:e,handler:s}){let n;return{promise:new Promise((e=>{n=setTimeout((async()=>{e(await s.cacheMatch(t))}),1e3*this.xt)})),id:n}}async Lt({timeoutId:t,request:e,logs:s,handler:n}){let i,a;try{a=await n.fetchAndCachePut(e)}catch(t){i=t}return t&&clearTimeout(t),!i&&a||(a=await n.cacheMatch(e)),a}},t.clientsClaim=function(){self.addEventListener("activate",(()=>self.clients.claim()))},t.precacheAndRoute=function(t,e){!function(t){tt().precache(t)}(t),function(t){const e=tt();h(new et(e,t))}(e)},t.registerRoute=h}));
//# sourceMappingURL=workbox-bb98e8a8.js.map
